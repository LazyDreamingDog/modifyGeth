// Code generated by rlpgen. DO NOT EDIT.

package types

import "github.com/ethereum/go-ethereum/rlp"
import "io"

func (obj *StateAccount) EncodeRLP(_w io.Writer) error {
	w := rlp.NewEncoderBuffer(_w)
	_tmp0 := w.List()
	w.WriteUint64(obj.Nonce)
	if obj.Balance == nil {
		w.Write(rlp.EmptyString)
	} else {
		w.WriteUint256(obj.Balance)
	}
	w.WriteBytes(obj.Root[:])
	w.WriteBytes(obj.CodeHash)
	w.WriteUint64(obj.SecurityLevel)
	if obj.Interest == nil {
		w.Write(rlp.EmptyString)
	} else {
		w.WriteUint256(obj.Interest)
	}
	if obj.LastBlockNumber == nil {
		w.Write(rlp.EmptyString)
	} else {
		if obj.LastBlockNumber.Sign() == -1 {
			return rlp.ErrNegativeBigInt
		}
		w.WriteBigInt(obj.LastBlockNumber)
	}
	w.WriteBytes(obj.LastPostQuanPub)
	if obj.TotalNumberOfGas == nil {
		w.Write(rlp.EmptyString)
	} else {
		w.WriteUint256(obj.TotalNumberOfGas)
	}
	if obj.ContractCallCount == nil {
		w.Write(rlp.EmptyString)
	} else {
		if obj.ContractCallCount.Sign() == -1 {
			return rlp.ErrNegativeBigInt
		}
		w.WriteBigInt(obj.ContractCallCount)
	}
	if obj.TotalValueTx == nil {
		w.Write(rlp.EmptyString)
	} else {
		w.WriteUint256(obj.TotalValueTx)
	}
	w.WriteUint64(obj.PledgeAmount)
	w.WriteUint64(obj.PledgeYear)
	w.WriteUint64(obj.StartTime)
	w.WriteUint64(obj.InterestRate)
	w.WriteUint64(obj.CurrentInterest)
	w.WriteUint64(obj.EarnInterest)
	w.WriteUint64(obj.AnnualFee)
	w.WriteUint64(obj.LastAnnualFeeTime)
	w.WriteBytes(obj.ContractAddress[:])
	w.WriteBytes(obj.DeployedAddress[:])
	w.WriteBytes(obj.InvestorAddress[:])
	w.WriteBytes(obj.BeneficiaryAddress[:])
	w.WriteBool(obj.StakeFlag)
	w.ListEnd(_tmp0)
	return w.Flush()
}
